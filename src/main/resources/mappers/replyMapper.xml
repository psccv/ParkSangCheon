<?xml version="1.0" encoding="UTF-8"?>
<!--
	  Mapper 인터페이스를 이용하는 또 다른 장점은 기존의 XML 을
	   그대로 사용할 수 있음.
	   이때 두가지 규칙이 있음.
	   1. Mapper 인터페이스 이름과 XML Mapper 의 네임스페이스를 반드시
		  일치시킬 것.
	   2. Mapper 인터페이스의 메서드 이름과 XML 의 id 를 반드시 일치시킴.
	   root-context.xml :: sqlSessionFactory 에 매퍼 xml 파일의 경로를 인식하게 함.
-->

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="org.edu.dao.IF_ReplyDAO">

	<select id="selectReply" resultType="org.edu.vo.ReplyVO">		
		SELECT * FROM tbl_reply WHERE bno = #{bno}
		ORDER BY regdate DESC
		LIMIT #{pageVO.startNo} , #{pageVO.perPageNum}
	</select>
	
	<select id="countRno" resultType="int">
		SELECT COUNT(*) FROM tbl_reply WHERE bno = #{bno}
	</select>
	
	<insert id="insertReply">
		INSERT INTO tbl_reply(bno, replytext, replyer, regdate)
		VALUES(#{bno}, #{replytext}, #{replyer}, now())
	</insert>
	
	<update id="updateReply">
		UPDATE tbl_reply SET
		replytext = #{replytext},
		update_date = now()
		WHERE rno = #{rno}
	</update>
	
	<delete id="deleteReply">
		DELETE FROM tbl_reply WHERE rno = #{rno}
	</delete>
		
</mapper>